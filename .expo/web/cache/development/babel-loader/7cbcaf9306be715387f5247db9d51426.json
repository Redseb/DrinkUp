{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RotationGestureHandler = exports.PinchGestureHandler = exports.PanGestureHandler = exports.LongPressGestureHandler = exports.ForceTouchGestureHandler = exports.FlingGestureHandler = exports.TapGestureHandler = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\n\nvar _GestureHandlerPropTypes = _interopRequireDefault(require(\"./GestureHandlerPropTypes\"));\n\nvar _PlatformConstants = _interopRequireDefault(require(\"./PlatformConstants\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar TapGestureHandler = (0, _createHandler.default)('TapGestureHandler', _objectSpread(_objectSpread({}, _GestureHandlerPropTypes.default), {}, {\n  maxDurationMs: _propTypes.default.number,\n  maxDelayMs: _propTypes.default.number,\n  numberOfTaps: _propTypes.default.number,\n  maxDeltaX: _propTypes.default.number,\n  maxDeltaY: _propTypes.default.number,\n  maxDist: _propTypes.default.number,\n  minPointers: _propTypes.default.number\n}), {});\nexports.TapGestureHandler = TapGestureHandler;\nvar FlingGestureHandler = (0, _createHandler.default)('FlingGestureHandler', _objectSpread(_objectSpread({}, _GestureHandlerPropTypes.default), {}, {\n  numberOfPointers: _propTypes.default.number,\n  direction: _propTypes.default.number\n}), {});\nexports.FlingGestureHandler = FlingGestureHandler;\n\nvar ForceTouchFallback = function (_React$Component) {\n  (0, _inherits2.default)(ForceTouchFallback, _React$Component);\n\n  var _super = _createSuper(ForceTouchFallback);\n\n  function ForceTouchFallback() {\n    (0, _classCallCheck2.default)(this, ForceTouchFallback);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ForceTouchFallback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return ForceTouchFallback;\n}(_react.default.Component);\n\nvar ForceTouchGestureHandler = _PlatformConstants.default && _PlatformConstants.default.forceTouchAvailable ? (0, _createHandler.default)('ForceTouchGestureHandler', _objectSpread(_objectSpread({}, _GestureHandlerPropTypes.default), {}, {\n  minForce: _propTypes.default.number,\n  maxForce: _propTypes.default.number,\n  feedbackOnActivation: _propTypes.default.bool\n}), {}) : ForceTouchFallback;\nexports.ForceTouchGestureHandler = ForceTouchGestureHandler;\nForceTouchGestureHandler.forceTouchAvailable = _PlatformConstants.default && _PlatformConstants.default.forceTouchAvailable || false;\nvar LongPressGestureHandler = (0, _createHandler.default)('LongPressGestureHandler', _objectSpread(_objectSpread({}, _GestureHandlerPropTypes.default), {}, {\n  minDurationMs: _propTypes.default.number,\n  maxDist: _propTypes.default.number\n}), {});\nexports.LongPressGestureHandler = LongPressGestureHandler;\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n\nvar PanGestureHandler = (0, _createHandler.default)('PanGestureHandler', _objectSpread(_objectSpread({}, _GestureHandlerPropTypes.default), {}, {\n  activeOffsetY: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  activeOffsetX: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  failOffsetY: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  failOffsetX: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  minDist: _propTypes.default.number,\n  minVelocity: _propTypes.default.number,\n  minVelocityX: _propTypes.default.number,\n  minVelocityY: _propTypes.default.number,\n  minPointers: _propTypes.default.number,\n  maxPointers: _propTypes.default.number,\n  avgTouches: _propTypes.default.bool\n}), {}, managePanProps, {\n  activeOffsetYStart: true,\n  activeOffsetYEnd: true,\n  activeOffsetXStart: true,\n  activeOffsetXEnd: true,\n  failOffsetYStart: true,\n  failOffsetYEnd: true,\n  failOffsetXStart: true,\n  failOffsetXEnd: true\n});\nexports.PanGestureHandler = PanGestureHandler;\nvar PinchGestureHandler = (0, _createHandler.default)('PinchGestureHandler', _GestureHandlerPropTypes.default, {});\nexports.PinchGestureHandler = PinchGestureHandler;\nvar RotationGestureHandler = (0, _createHandler.default)('RotationGestureHandler', _GestureHandlerPropTypes.default, {});\nexports.RotationGestureHandler = RotationGestureHandler;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-gesture-handler/Gestures.js"],"names":["TapGestureHandler","GestureHandlerPropTypes","maxDurationMs","PropTypes","number","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","minPointers","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","console","warn","props","children","React","Component","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","bool","LongPressGestureHandler","minDurationMs","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","Error","failOffsetX","minDeltaY","activeOffsetY","failOffsetY","Array","isArray","transformPanGestureHandlerProps","res","undefined","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","oneOfType","arrayOf","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\nimport PlatformConstants from './PlatformConstants';\n\nexport const TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nexport const FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport const ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nexport const LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport const PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nexport const PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nexport const RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n"]},"metadata":{},"sourceType":"script"}