{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\React Native\\\\drinkUp\\\\src\\\\components\\\\PlayerBadge.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar PlayerBadge = function PlayerBadge(_ref) {\n  var playerName = _ref.playerName,\n      id = _ref.id,\n      players = _ref.players,\n      setPlayers = _ref.setPlayers;\n  var scale = (0, _reactNativeReanimated.useSharedValue)(0);\n  var scaleStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          scale: (0, _reactNativeReanimated.withTiming)(scale.value, {\n            duration: 200\n          })\n        }]\n      };\n    };\n\n    _f._closure = {\n      withTiming: _reactNativeReanimated.withTiming,\n      scale\n    };\n    _f.asString = \"function _f(){const{withTiming,scale}=jsThis._closure;{return{transform:[{scale:withTiming(scale.value,{duration:200})}]};}}\";\n    _f.__workletHash = 14358674512208;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  (0, _react.useEffect)(function () {\n    scale.value = 1;\n  }, []);\n  return _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [scaleStyle, styles.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.name,\n    numberOfLines: 1,\n    maxLength: 12,\n    placeholder: \"Player \" + id,\n    onChangeText: function onChangeText(text) {\n      var newPlayers = players;\n\n      for (var i = 0; i < newPlayers.length; i++) {\n        if (newPlayers[i].id == id) {\n          newPlayers[i].name = text;\n          break;\n        }\n      }\n\n      setPlayers(newPlayers);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, playerName), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: {\n      alignSelf: 'center'\n    },\n    onPress: function onPress() {\n      scale.value = 0;\n      setTimeout(function () {\n        setPlayers(players.filter(function (player) {\n          return player.id !== id;\n        }));\n      }, 200);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Ionicons.default, {\n    name: \"trash\",\n    size: height / 25,\n    color: \"#303030\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#FDD451',\n    marginVertical: height / 60,\n    marginHorizontal: width / 10,\n    borderRadius: 10,\n    borderColor: '#303030',\n    borderWidth: 2,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    elevation: 5\n  },\n  name: {\n    fontFamily: 'FjallaOne',\n    fontSize: height / 25,\n    textDecorationLine: 'underline'\n  }\n});\n\nvar _default = PlayerBadge;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/components/PlayerBadge.js"],"names":["Dimensions","get","width","height","PlayerBadge","playerName","id","players","setPlayers","scale","scaleStyle","transform","value","duration","withTiming","styles","container","name","text","newPlayers","i","length","alignSelf","setTimeout","filter","player","StyleSheet","create","display","flexDirection","justifyContent","backgroundColor","marginVertical","marginHorizontal","borderRadius","borderColor","borderWidth","paddingHorizontal","paddingVertical","elevation","fontFamily","fontSize","textDecorationLine"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport Animated, {\r\n  useSharedValue,\r\n  useAnimatedStyle,\r\n  Easing,\r\n  withTiming,\r\n  repeat,\r\n} from 'react-native-reanimated';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nconst PlayerBadge = ({playerName, id, players, setPlayers}) => {\r\n  const scale = useSharedValue(0);\r\n  const scaleStyle = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{scale: withTiming(scale.value, {duration: 200})}],\r\n    };\r\n  });\r\n  useEffect(() => {\r\n    scale.value = 1;\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View style={[scaleStyle, styles.container]}>\r\n      <TextInput\r\n        style={styles.name}\r\n        numberOfLines={1}\r\n        maxLength={12}\r\n        placeholder={`Player ${id}`}\r\n        onChangeText={(text) => {\r\n          let newPlayers = players;\r\n          for (let i = 0; i < newPlayers.length; i++) {\r\n            if (newPlayers[i].id == id) {\r\n              newPlayers[i].name = text;\r\n              break;\r\n            }\r\n          }\r\n          setPlayers(newPlayers);\r\n        }}>\r\n        {playerName}\r\n      </TextInput>\r\n      <TouchableOpacity\r\n        style={{alignSelf: 'center'}}\r\n        onPress={() => {\r\n          scale.value = 0;\r\n          setTimeout(() => {\r\n            setPlayers(players.filter((player) => player.id !== id));\r\n          }, 200);\r\n        }}>\r\n        <Icon name=\"trash\" size={height / 25} color=\"#303030\" />\r\n      </TouchableOpacity>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#FDD451',\r\n    marginVertical: height / 60,\r\n    marginHorizontal: width / 10,\r\n    borderRadius: 10,\r\n    borderColor: '#303030',\r\n    borderWidth: 2,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    elevation: 5,\r\n  },\r\n  name: {\r\n    fontFamily: 'FjallaOne',\r\n    fontSize: height / 25,\r\n    textDecorationLine: 'underline',\r\n  },\r\n});\r\n\r\nexport default PlayerBadge;\r\n"]},"metadata":{},"sourceType":"script"}