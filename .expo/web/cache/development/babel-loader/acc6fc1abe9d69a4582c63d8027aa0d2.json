{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTransition = exports.withOffset = exports.withSpring = exports.snapPoint = exports.delay = exports.timing = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _v = require(\"react-native-redash/lib/module/v1\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar timing = function timing(timingConfig) {\n  var _clock$easing$duratio = _objectSpread({\n    clock: new _reactNativeReanimated.Clock(),\n    easing: _reactNativeReanimated.Easing.linear,\n    duration: 250,\n    from: 0,\n    to: 1\n  }, timingConfig),\n      clock = _clock$easing$duratio.clock,\n      easing = _clock$easing$duratio.easing,\n      duration = _clock$easing$duratio.duration,\n      from = _clock$easing$duratio.from,\n      toValue = _clock$easing$duratio.to;\n\n  var state = {\n    finished: new _reactNativeReanimated.Value(0),\n    position: new _reactNativeReanimated.Value(0),\n    time: new _reactNativeReanimated.Value(0),\n    frameTime: new _reactNativeReanimated.Value(0)\n  };\n  var config = {\n    toValue: toValue,\n    duration: duration,\n    easing: easing\n  };\n  return (0, _reactNativeReanimated.block)([(0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.not)((0, _reactNativeReanimated.clockRunning)(clock)), [(0, _reactNativeReanimated.set)(state.finished, 0), (0, _reactNativeReanimated.set)(state.time, 0), (0, _reactNativeReanimated.set)(state.position, from), (0, _reactNativeReanimated.set)(state.frameTime, 0), (0, _reactNativeReanimated.startClock)(clock)]), (0, _reactNativeReanimated.timing)(clock, state, config), (0, _reactNativeReanimated.cond)(state.finished, (0, _reactNativeReanimated.stopClock)(clock)), state.position]);\n};\n\nexports.timing = timing;\n\nvar delay = function delay(node, duration) {\n  var clock = new _reactNativeReanimated.Clock();\n  return (0, _reactNativeReanimated.block)([timing({\n    clock: clock,\n    from: 0,\n    to: 1,\n    duration: duration\n  }), (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.not)((0, _reactNativeReanimated.clockRunning)(clock)), node)]);\n};\n\nexports.delay = delay;\n\nvar snapPoint = function snapPoint(value, velocity, points) {\n  var point = (0, _reactNativeReanimated.add)(value, (0, _reactNativeReanimated.multiply)(0.2, velocity));\n\n  var diffPoint = function diffPoint(p) {\n    return (0, _reactNativeReanimated.abs)((0, _reactNativeReanimated.sub)(point, p));\n  };\n\n  var deltas = points.map(function (p) {\n    return diffPoint(p);\n  });\n\n  var minDelta = _v.min.apply(void 0, (0, _toConsumableArray2.default)(deltas));\n\n  return points.reduce(function (acc, p) {\n    return (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.eq)(diffPoint(p), minDelta), p, acc);\n  }, new _reactNativeReanimated.Value());\n};\n\nexports.snapPoint = snapPoint;\n\nvar withSpring = function withSpring(props) {\n  var _offset$props = _objectSpread({\n    offset: new _reactNativeReanimated.Value(0)\n  }, props),\n      value = _offset$props.value,\n      velocity = _offset$props.velocity,\n      state = _offset$props.state,\n      snapPoints = _offset$props.snapPoints,\n      offset = _offset$props.offset,\n      springConfig = _offset$props.config,\n      onSnap = _offset$props.onSnap;\n\n  var clock = new _reactNativeReanimated.Clock();\n  var springState = {\n    finished: new _reactNativeReanimated.Value(0),\n    velocity: new _reactNativeReanimated.Value(0),\n    position: new _reactNativeReanimated.Value(0),\n    time: new _reactNativeReanimated.Value(0)\n  };\n\n  var config = _objectSpread({\n    toValue: new _reactNativeReanimated.Value(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1\n  }, springConfig);\n\n  var gestureAndAnimationIsOver = new _reactNativeReanimated.Value(1);\n  var isSpringInterrupted = (0, _reactNativeReanimated.and)((0, _reactNativeReanimated.eq)(state, _reactNativeGestureHandler.State.BEGAN), (0, _reactNativeReanimated.clockRunning)(clock));\n  var finishSpring = [(0, _reactNativeReanimated.set)(offset, springState.position), (0, _reactNativeReanimated.stopClock)(clock), (0, _reactNativeReanimated.set)(gestureAndAnimationIsOver, 1)];\n  var snap = onSnap ? [(0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.clockRunning)(clock), (0, _reactNativeReanimated.call)([springState.position], onSnap))] : [];\n  return (0, _reactNativeReanimated.block)([(0, _reactNativeReanimated.cond)(isSpringInterrupted, finishSpring), (0, _reactNativeReanimated.cond)(gestureAndAnimationIsOver, (0, _reactNativeReanimated.set)(springState.position, offset)), (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.neq)(state, _reactNativeGestureHandler.State.END), [(0, _reactNativeReanimated.set)(gestureAndAnimationIsOver, 0), (0, _reactNativeReanimated.set)(springState.finished, 0), (0, _reactNativeReanimated.set)(springState.position, (0, _reactNativeReanimated.add)(offset, value))]), (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.and)((0, _reactNativeReanimated.eq)(state, _reactNativeGestureHandler.State.END), (0, _reactNativeReanimated.not)(gestureAndAnimationIsOver)), [(0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.and)((0, _reactNativeReanimated.not)((0, _reactNativeReanimated.clockRunning)(clock)), (0, _reactNativeReanimated.not)(springState.finished)), [(0, _reactNativeReanimated.set)(springState.velocity, velocity), (0, _reactNativeReanimated.set)(springState.time, 0), (0, _reactNativeReanimated.set)(config.toValue, snapPoint(springState.position, velocity, snapPoints)), (0, _reactNativeReanimated.startClock)(clock)]), (0, _reactNativeReanimated.spring)(clock, springState, config), (0, _reactNativeReanimated.cond)(springState.finished, [].concat(snap, finishSpring))]), springState.position]);\n};\n\nexports.withSpring = withSpring;\n\nvar withOffset = function withOffset(_ref) {\n  var offset = _ref.offset,\n      value = _ref.value,\n      gestureState = _ref.state;\n  var safeOffset = new _reactNativeReanimated.Value();\n  return (0, _reactNativeReanimated.block)([(0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.not)((0, _reactNativeReanimated.defined)(safeOffset)), (0, _reactNativeReanimated.set)(safeOffset, offset === undefined ? 0 : offset)), (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.eq)(gestureState, _reactNativeGestureHandler.State.ACTIVE), (0, _reactNativeReanimated.add)(safeOffset, value), [(0, _reactNativeReanimated.set)(safeOffset, (0, _reactNativeReanimated.add)(safeOffset, value))])]);\n};\n\nexports.withOffset = withOffset;\n\nvar withTransition = function withTransition(value, velocity) {\n  var gestureState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _reactNativeReanimated.Value(_reactNativeGestureHandler.State.UNDETERMINED);\n  var springConfig = arguments.length > 3 ? arguments[3] : undefined;\n  var clock = new _reactNativeReanimated.Clock();\n  var state = {\n    finished: new _reactNativeReanimated.Value(0),\n    velocity: new _reactNativeReanimated.Value(0),\n    position: new _reactNativeReanimated.Value(0),\n    time: new _reactNativeReanimated.Value(0)\n  };\n\n  var config = _objectSpread({\n    toValue: new _reactNativeReanimated.Value(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1\n  }, springConfig);\n\n  return (0, _reactNativeReanimated.block)([(0, _reactNativeReanimated.startClock)(clock), (0, _reactNativeReanimated.set)(config.toValue, value), (0, _reactNativeReanimated.cond)((0, _reactNativeReanimated.eq)(gestureState, _reactNativeGestureHandler.State.ACTIVE), [(0, _reactNativeReanimated.set)(state.velocity, velocity), (0, _reactNativeReanimated.set)(state.position, value)], (0, _reactNativeReanimated.spring)(clock, state, config)), state.position]);\n};\n\nexports.withTransition = withTransition;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/util/animation-helpers.js"],"names":["timing","timingConfig","clock","Clock","easing","Easing","linear","duration","from","to","toValue","state","finished","Value","position","time","frameTime","config","delay","node","snapPoint","value","velocity","points","point","diffPoint","p","deltas","map","minDelta","min","reduce","acc","withSpring","props","offset","snapPoints","springConfig","onSnap","springState","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","gestureAndAnimationIsOver","isSpringInterrupted","State","BEGAN","finishSpring","snap","END","withOffset","gestureState","safeOffset","undefined","ACTIVE","withTransition","UNDETERMINED"],"mappings":"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","sourcesContent":["import Animated, {\r\n  Easing,\r\n  Clock,\r\n  Value,\r\n  block,\r\n  cond,\r\n  not,\r\n  clockRunning,\r\n  startClock,\r\n  timing as reTiming,\r\n  spring as reSpring,\r\n  stopClock,\r\n  add,\r\n  multiply,\r\n  call,\r\n  and,\r\n  eq,\r\n  abs,\r\n  sub,\r\n  neq,\r\n  set,\r\n  defined,\r\n} from 'react-native-reanimated';\r\nimport {State} from 'react-native-gesture-handler';\r\nimport {min} from 'react-native-redash/lib/module/v1';\r\n\r\nexport const timing = (timingConfig) => {\r\n  const {clock, easing, duration, from, to: toValue} = {\r\n    clock: new Clock(),\r\n    easing: Easing.linear,\r\n    duration: 250,\r\n    from: 0,\r\n    to: 1,\r\n    ...timingConfig,\r\n  };\r\n\r\n  const state = {\r\n    finished: new Value(0),\r\n    position: new Value(0),\r\n    time: new Value(0),\r\n    frameTime: new Value(0),\r\n  };\r\n\r\n  const config = {\r\n    toValue,\r\n    duration,\r\n    easing,\r\n  };\r\n\r\n  return block([\r\n    cond(not(clockRunning(clock)), [\r\n      set(state.finished, 0),\r\n      set(state.time, 0),\r\n      set(state.position, from),\r\n      set(state.frameTime, 0),\r\n      startClock(clock),\r\n    ]),\r\n    reTiming(clock, state, config),\r\n    cond(state.finished, stopClock(clock)),\r\n    state.position,\r\n  ]);\r\n};\r\n\r\nexport const delay = (node, duration) => {\r\n  const clock = new Clock();\r\n  return block([\r\n    timing({clock, from: 0, to: 1, duration}),\r\n    cond(not(clockRunning(clock)), node),\r\n  ]);\r\n};\r\n\r\nexport const snapPoint = (value, velocity, points) => {\r\n  const point = add(value, multiply(0.2, velocity));\r\n  const diffPoint = (p) => abs(sub(point, p));\r\n  const deltas = points.map((p) => diffPoint(p));\r\n  const minDelta = min(...deltas);\r\n  return points.reduce(\r\n    (acc, p) => cond(eq(diffPoint(p), minDelta), p, acc),\r\n    new Value(),\r\n  );\r\n};\r\n\r\nexport const withSpring = (props) => {\r\n  const {\r\n    value,\r\n    velocity,\r\n    state,\r\n    snapPoints,\r\n    offset,\r\n    config: springConfig,\r\n    onSnap,\r\n  } = {\r\n    offset: new Value(0),\r\n    ...props,\r\n  };\r\n  const clock = new Clock();\r\n  const springState = {\r\n    finished: new Value(0),\r\n    velocity: new Value(0),\r\n    position: new Value(0),\r\n    time: new Value(0),\r\n  };\r\n\r\n  const config = {\r\n    toValue: new Value(0),\r\n    damping: 15,\r\n    mass: 1,\r\n    stiffness: 150,\r\n    overshootClamping: false,\r\n    restSpeedThreshold: 1,\r\n    restDisplacementThreshold: 1,\r\n    ...springConfig,\r\n  };\r\n\r\n  const gestureAndAnimationIsOver = new Value(1);\r\n  const isSpringInterrupted = and(eq(state, State.BEGAN), clockRunning(clock));\r\n  const finishSpring = [\r\n    set(offset, springState.position),\r\n    stopClock(clock),\r\n    set(gestureAndAnimationIsOver, 1),\r\n  ];\r\n  const snap = onSnap\r\n    ? [cond(clockRunning(clock), call([springState.position], onSnap))]\r\n    : [];\r\n  return block([\r\n    cond(isSpringInterrupted, finishSpring),\r\n    cond(gestureAndAnimationIsOver, set(springState.position, offset)),\r\n    cond(neq(state, State.END), [\r\n      set(gestureAndAnimationIsOver, 0),\r\n      set(springState.finished, 0),\r\n      set(springState.position, add(offset, value)),\r\n    ]),\r\n    cond(and(eq(state, State.END), not(gestureAndAnimationIsOver)), [\r\n      cond(and(not(clockRunning(clock)), not(springState.finished)), [\r\n        set(springState.velocity, velocity),\r\n        set(springState.time, 0),\r\n        set(\r\n          config.toValue,\r\n          snapPoint(springState.position, velocity, snapPoints),\r\n        ),\r\n        startClock(clock),\r\n      ]),\r\n      reSpring(clock, springState, config),\r\n      cond(springState.finished, [...snap, ...finishSpring]),\r\n    ]),\r\n    springState.position,\r\n  ]);\r\n};\r\n\r\nexport const withOffset = ({offset, value, state: gestureState}) => {\r\n  const safeOffset = new Value();\r\n  return block([\r\n    cond(\r\n      not(defined(safeOffset)),\r\n      set(safeOffset, offset === undefined ? 0 : offset),\r\n    ),\r\n    cond(eq(gestureState, State.ACTIVE), add(safeOffset, value), [\r\n      set(safeOffset, add(safeOffset, value)),\r\n    ]),\r\n  ]);\r\n};\r\n\r\nexport const withTransition = (\r\n  value,\r\n  velocity,\r\n  gestureState = new Value(State.UNDETERMINED),\r\n  springConfig,\r\n) => {\r\n  const clock = new Clock();\r\n  const state = {\r\n    finished: new Value(0),\r\n    velocity: new Value(0),\r\n    position: new Value(0),\r\n    time: new Value(0),\r\n  };\r\n  const config = {\r\n    toValue: new Value(0),\r\n    damping: 15,\r\n    mass: 1,\r\n    stiffness: 150,\r\n    overshootClamping: false,\r\n    restSpeedThreshold: 1,\r\n    restDisplacementThreshold: 1,\r\n    ...springConfig,\r\n  };\r\n  return block([\r\n    startClock(clock),\r\n    set(config.toValue, value),\r\n    cond(\r\n      eq(gestureState, State.ACTIVE),\r\n      [set(state.velocity, velocity), set(state.position, value)],\r\n      reSpring(clock, state, config),\r\n    ),\r\n    state.position,\r\n  ]);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}