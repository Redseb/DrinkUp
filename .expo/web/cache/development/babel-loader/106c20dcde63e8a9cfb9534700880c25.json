{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCallID = getCallID;\nexports.setCallID = setCallID;\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _ReanimatedModule = _interopRequireDefault(require(\"../ReanimatedModule\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar UPDATED_NODES = [];\nvar loopID = 1;\nvar propUpdatesEnqueued = null;\nvar nodeCount = 0;\nvar callID = \"\";\n\nfunction getCallID() {\n  return callID;\n}\n\nfunction setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (_reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    var output = {};\n\n    for (var property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n\n    return output;\n  }\n\n  return config;\n}\n\nfunction runPropUpdates() {\n  var visitedNodes = new Set();\n\n  var findAndUpdateNodes = function findAndUpdateNodes(node) {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      var nodes = node.__getChildren();\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < UPDATED_NODES.length; i++) {\n    var node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n\n  UPDATED_NODES.length = 0;\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nvar AnimatedNode = function () {\n  function AnimatedNode(nodeConfig, inputNodes) {\n    (0, _classCallCheck2.default)(this, AnimatedNode);\n    this.__lastLoopID = {\n      \"\": -1\n    };\n    this.__memoizedValue = {\n      \"\": null\n    };\n    this.__children = [];\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes = inputNodes && inputNodes.filter(function (node) {\n      return node instanceof AnimatedNode;\n    });\n  }\n\n  (0, _createClass2.default)(AnimatedNode, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedNode, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.__nativeInitialize();\n\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__removeChild(this);\n        }\n      }\n\n      this.__nativeTearDown();\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n        this.__lastLoopID[callID] = loopID;\n\n        var result = this.__onEvaluate();\n\n        this.__memoizedValue[callID] = result;\n        return result;\n      }\n\n      return this.__memoizedValue[callID];\n    }\n  }, {\n    key: \"__forceUpdateCache\",\n    value: function __forceUpdateCache(newValue) {\n      this.__memoizedValue[callID] = newValue;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__dangerouslyRescheduleEvaluate\",\n    value: function __dangerouslyRescheduleEvaluate() {\n      this.__lastLoopID[callID] = -1;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__markUpdated\",\n    value: function __markUpdated() {\n      UPDATED_NODES.push(this);\n\n      if (!propUpdatesEnqueued) {\n        propUpdatesEnqueued = setImmediate(runPropUpdates);\n      }\n    }\n  }, {\n    key: \"__nativeInitialize\",\n    value: function __nativeInitialize() {\n      if (!this.__initialized) {\n        _ReanimatedModule.default.createNode(this.__nodeID, _objectSpread({}, this.__nodeConfig));\n\n        this.__initialized = true;\n      }\n    }\n  }, {\n    key: \"__nativeTearDown\",\n    value: function __nativeTearDown() {\n      if (this.__initialized) {\n        _ReanimatedModule.default.dropNode(this.__nodeID);\n\n        this.__initialized = false;\n      }\n    }\n  }, {\n    key: \"isNativelyInitialized\",\n    value: function isNativelyInitialized() {\n      return this.__initialized;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      throw new Error('Missing implementation of onEvaluate');\n    }\n  }, {\n    key: \"__getProps\",\n    value: function __getProps() {\n      return this.__getValue();\n    }\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return this.__children;\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {\n      if (this.__children.length === 0) {\n        this.__attach();\n      }\n\n      this.__children.push(child);\n\n      child.__nativeInitialize();\n\n      if (_ReanimatedModule.default.connectNodes) {\n        _ReanimatedModule.default.connectNodes(this.__nodeID, child.__nodeID);\n      } else {\n        child.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {\n      var index = this.__children.indexOf(child);\n\n      if (index === -1) {\n        console.warn(\"Trying to remove a child that doesn't exist\");\n        return;\n      }\n\n      if (_ReanimatedModule.default.disconnectNodes) {\n        _ReanimatedModule.default.disconnectNodes(this.__nodeID, child.__nodeID);\n      }\n\n      this.__children.splice(index, 1);\n\n      if (this.__children.length === 0) {\n        this.__detach();\n      }\n    }\n  }, {\n    key: \"_connectAnimatedView\",\n    value: function _connectAnimatedView(nativeViewTag) {\n      if (_ReanimatedModule.default.connectNodeToView) {\n        _ReanimatedModule.default.connectNodeToView(this.__nodeID, nativeViewTag);\n      } else {\n        this.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"_disconnectAnimatedView\",\n    value: function _disconnectAnimatedView(nativeViewTag) {\n      _ReanimatedModule.default.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n    }\n  }]);\n  return AnimatedNode;\n}();\n\nexports.default = AnimatedNode;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedNode.js"],"names":["UPDATED_NODES","loopID","propUpdatesEnqueued","nodeCount","callID","getCallID","setCallID","nextCallID","sanitizeConfig","config","Platform","OS","includes","Array","isArray","map","AnimatedNode","__nodeID","output","property","runPropUpdates","visitedNodes","Set","findAndUpdateNodes","node","console","warn","has","add","update","nodes","__getChildren","i","l","length","nodeConfig","inputNodes","__lastLoopID","__memoizedValue","__children","__nodeConfig","__initialized","__inputNodes","filter","__nativeInitialize","__addChild","__removeChild","__nativeTearDown","result","__onEvaluate","newValue","__markUpdated","push","setImmediate","ReanimatedModule","createNode","dropNode","Error","__getValue","child","__attach","connectNodes","__dangerouslyRescheduleEvaluate","index","indexOf","disconnectNodes","splice","__detach","nativeViewTag","connectNodeToView","disconnectNodeFromView"],"mappings":"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","sourcesContent":["import ReanimatedModule from '../ReanimatedModule';\nimport { Platform } from 'react-native';\n\nconst UPDATED_NODES = [];\n\nlet loopID = 1;\nlet propUpdatesEnqueued = null;\nlet nodeCount = 0;\nlet callID = \"\";\n\nexport function getCallID() {\n  return callID;\n}\n\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    const output = {};\n    for (const property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n    return output;\n  }\n  // unhandled\n  return config;\n}\n\nfunction runPropUpdates() {\n  const visitedNodes = new Set();\n  const findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      const nodes = node.__getChildren();\n      if (nodes) {\n        for (let i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n  for (let i = 0; i < UPDATED_NODES.length; i++) {\n    const node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n  UPDATED_NODES.length = 0; // clear array\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nexport default class AnimatedNode {\n\n  __nodeID;\n  __lastLoopID = { \"\": -1 };\n  __memoizedValue = { \"\": null };\n  __children = [];\n\n  constructor(nodeConfig, inputNodes) {\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes =\n      inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return `AnimatedNode, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n      const result = this.__onEvaluate();\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = setImmediate(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, { ...this.__nodeConfig });\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n    this.__children.push(child);\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    const index = this.__children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}