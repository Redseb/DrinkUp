{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedSet = require(\"../core/AnimatedSet\");\n\nvar _interpolate2 = _interopRequireDefault(require(\"../derived/interpolate\"));\n\nvar _InternalAnimatedValue = _interopRequireDefault(require(\"./InternalAnimatedValue\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _evaluateOnce = require(\"../derived/evaluateOnce\");\n\nvar _ReanimatedModule = _interopRequireDefault(require(\"../ReanimatedModule\"));\n\nvar _val = require(\"../val\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedValue = function (_InternalAnimatedValu) {\n  (0, _inherits2.default)(AnimatedValue, _InternalAnimatedValu);\n\n  var _super = _createSuper(AnimatedValue);\n\n  function AnimatedValue() {\n    (0, _classCallCheck2.default)(this, AnimatedValue);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(AnimatedValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.__detachAnimation(this._animation);\n\n      if (_reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'macos') {\n        this._updateValue((0, _val.val)(value));\n      } else {\n        if (_ReanimatedModule.default.setValue && typeof value === 'number') {\n          _ReanimatedModule.default.setValue(this.__nodeID, value);\n        } else {\n          (0, _evaluateOnce.evaluateOnce)((0, _AnimatedSet.createAnimatedSet)(this, value), this);\n        }\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedValue, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return (0, _interpolate2.default)(this, config);\n    }\n  }]);\n  return AnimatedValue;\n}(_InternalAnimatedValue.default);\n\nexports.default = AnimatedValue;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedValue.js"],"names":["AnimatedValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","ReanimatedModule","setValue","__nodeID","config","InternalAnimatedValue"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IAGqBA,a;;;;;;;;;;;;6BACVC,K,EAAO;AACd,WAAKC,iBAAL,CAAuB,KAAKC,UAA5B;;AACA,UAAIC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASC,EAAT,KAAgB,SAAzC,IAAsDD,sBAASC,EAAT,KAAgB,OAA1E,EAAmF;AACjF,aAAKC,YAAL,CAAkB,cAAIL,KAAJ,CAAlB;AACD,OAFD,MAEO;AACL,YAAIM,0BAAiBC,QAAjB,IAA6B,OAAOP,KAAP,KAAiB,QAAlD,EAA4D;AAI1DM,oCAAiBC,QAAjB,CAA0B,KAAKC,QAA/B,EAAyCR,KAAzC;AACD,SALD,MAKO;AACL,0CAAa,oCAAI,IAAJ,EAAUA,KAAV,CAAb,EAA+B,IAA/B;AACD;AACF;AACF;;;+BAEU;AACT,qCAA6B,KAAKQ,QAAlC;AACD;;;gCAEWC,M,EAAQ;AAClB,aAAO,2BAAY,IAAZ,EAAkBA,MAAlB,CAAP;AACD;;;EAvBwCC,8B","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../ReanimatedModule';\nimport { val } from '../val';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}