{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _HomeScreen = _interopRequireDefault(require(\"./HomeScreen\"));\n\nvar _GameScreen = _interopRequireDefault(require(\"./GameScreen\"));\n\nvar _cardSupplier = require(\"../util/card-supplier\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\React Native\\\\drinkUp\\\\src\\\\screens\\\\ScreenContainer.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ScreenContainer = function ScreenContainer() {\n  var _useState = (0, _react.useState)([{\n    name: '',\n    id: 1\n  }, {\n    name: '',\n    id: 2\n  }]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      players = _useState2[0],\n      setPlayers = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      inGame = _useState4[0],\n      setInGame = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(function () {\n    return (0, _cardSupplier.initDeck)();\n  }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      deck = _useState6[0],\n      setDeck = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(0),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      currCardIndex = _useState8[0],\n      setCurrCardIndex = _useState8[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, inGame ? _react.default.createElement(_GameScreen.default, {\n    players: players,\n    setInGame: setInGame,\n    deck: deck,\n    setDeck: setDeck,\n    currCardIndex: currCardIndex,\n    setCurrCardIndex: setCurrCardIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }) : _react.default.createElement(_HomeScreen.default, {\n    players: players,\n    setPlayers: setPlayers,\n    setInGame: setInGame,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({});\n\nvar _default = ScreenContainer;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/screens/ScreenContainer.js"],"names":["Dimensions","get","width","height","ScreenContainer","name","id","players","setPlayers","inGame","setInGame","deck","setDeck","currCardIndex","setCurrCardIndex","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;sBAEwBA,wBAAWC,GAAX,CAAe,QAAf,C;IAAjBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AAGd,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACE,qBAAS,CACrC;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,EAAE,EAAE;AAAf,GADqC,EAErC;AAACD,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,EAAE,EAAE;AAAf,GAFqC,CAAT,CADF;AAAA;AAAA,MACrBC,OADqB;AAAA,MACZC,UADY;;AAAA,mBAKA,qBAAS,KAAT,CALA;AAAA;AAAA,MAKrBC,MALqB;AAAA,MAKbC,SALa;;AAAA,mBAMJ,qBAAS;AAAA,WAAM,6BAAN;AAAA,GAAT,CANI;AAAA;AAAA,MAMrBC,IANqB;AAAA,MAMfC,OANe;;AAAA,mBAOc,qBAAS,CAAT,CAPd;AAAA;AAAA,MAOrBC,aAPqB;AAAA,MAONC,gBAPM;;AAS5B,SACE,4DACGL,MAAM,GACL,6BAAC,mBAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,SAAS,EAAEG,SAFb;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,aAAa,EAAEC,aALjB;AAME,IAAA,gBAAgB,EAAEC,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAUL,6BAAC,mBAAD;AACE,IAAA,OAAO,EAAEP,OADX;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,SAAS,EAAEE,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAoBD,CA7BD;;AA+BA,IAAMK,MAAM,GAAGC,wBAAWC,MAAX,CAAkB,EAAlB,CAAf;;eAEeb,e","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, Dimensions, View} from 'react-native';\r\nimport HomeScreen from './HomeScreen';\r\nimport GameScreen from './GameScreen';\r\nimport {initDeck, shuffle, nextCard} from '../util/card-supplier';\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\n//Used to display and keeptrack of different screens without rerendering the background component\r\nconst ScreenContainer = () => {\r\n  const [players, setPlayers] = useState([\r\n    {name: '', id: 1},\r\n    {name: '', id: 2},\r\n  ]);\r\n  const [inGame, setInGame] = useState(false);\r\n  const [deck, setDeck] = useState(() => initDeck());\r\n  const [currCardIndex, setCurrCardIndex] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      {inGame ? (\r\n        <GameScreen\r\n          players={players}\r\n          setInGame={setInGame}\r\n          deck={deck}\r\n          setDeck={setDeck}\r\n          currCardIndex={currCardIndex}\r\n          setCurrCardIndex={setCurrCardIndex}\r\n        />\r\n      ) : (\r\n        <HomeScreen\r\n          players={players}\r\n          setPlayers={setPlayers}\r\n          setInGame={setInGame}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ScreenContainer;\r\n"]},"metadata":{},"sourceType":"script"}