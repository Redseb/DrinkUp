{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar PixelRatio = function () {\n  function PixelRatio() {}\n\n  PixelRatio.get = function get() {\n    return _Dimensions.default.get('window').scale;\n  };\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  };\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexports.default = PixelRatio;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"names":["PixelRatio","get","Dimensions","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio"],"mappings":";;;;;;;AASA;;AAKA,IAAIA,UAAU,GAEd,YAAY;AACV,WAASA,UAAT,GAAsB,CAAE;;AAKxBA,EAAAA,UAAU,CAACC,GAAX,GAAiB,SAASA,GAAT,GAAe;AAC9B,WAAOC,oBAAWD,GAAX,CAAe,QAAf,EAAyBE,KAAhC;AACD,GAFD;;AAQAH,EAAAA,UAAU,CAACI,YAAX,GAA0B,SAASA,YAAT,GAAwB;AAChD,WAAOF,oBAAWD,GAAX,CAAe,QAAf,EAAyBI,SAAzB,IAAsCL,UAAU,CAACC,GAAX,EAA7C;AACD,GAFD;;AASAD,EAAAA,UAAU,CAACM,yBAAX,GAAuC,SAASA,yBAAT,CAAmCC,UAAnC,EAA+C;AACpF,WAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGP,UAAU,CAACC,GAAX,EAAxB,CAAP;AACD,GAFD;;AAWAD,EAAAA,UAAU,CAACU,mBAAX,GAAiC,SAASA,mBAAT,CAA6BH,UAA7B,EAAyC;AACxE,QAAII,KAAK,GAAGX,UAAU,CAACC,GAAX,EAAZ;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGI,KAAxB,IAAiCA,KAAxC;AACD,GAHD;;AAKA,SAAOX,UAAP;AACD,CAxCD,EAFA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio =\n/*#__PURE__*/\nfunction () {\n  function PixelRatio() {}\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n  ;\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n  ;\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n  ;\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport { PixelRatio as default };"]},"metadata":{},"sourceType":"script"}