{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _NativeReanimated = _interopRequireDefault(require(\"./NativeReanimated\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar jsListener = function jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_objectSpread(_objectSpread({}, evt.nativeEvent), {}, {\n      eventName: eventName\n    }));\n  };\n};\n\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    (0, _classCallCheck2.default)(this, WorkletEventHandler);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n\n    if (!_NativeReanimated.default.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n\n  (0, _createClass2.default)(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag) {\n      var _this = this;\n\n      var fallbackEventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return _NativeReanimated.default.registerEventHandler(viewTag + eventName, _this.worklet);\n      });\n\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(_NativeReanimated.default.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations && this.registrations.forEach(function (id) {\n        return _NativeReanimated.default.unregisterEventHandler(id);\n      });\n      this.registrations = undefined;\n    }\n  }]);\n  return WorkletEventHandler;\n}();\n\nexports.default = WorkletEventHandler;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/reanimated2/WorkletEventHandler.js"],"names":["jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","worklet","eventNames","reattachNeeded","NativeModule","native","listeners","reduce","acc","newWorklet","viewTag","fallbackEventName","undefined","registrations","map","registerEventHandler","length","push","forEach","id","unregisterEventHandler"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAYC,OAAZ;AAAA,SAAwB,UAACC,GAAD,EAAS;AAClDD,IAAAA,OAAO,iCAAMC,GAAG,CAACC,WAAV;AAAuBH,MAAAA,SAAS,EAATA;AAAvB,OAAP;AACD,GAFkB;AAAA,CAAnB;;IAIqBI,mB;AACnB,+BAAYC,OAAZ,EAAsC;AAAA,QAAjBC,UAAiB,uEAAJ,EAAI;AAAA;AACpC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,cAAL,GAAsB,KAAtB;;AAEA,QAAI,CAACC,0BAAaC,MAAlB,EAA0B;AACxB,WAAKC,SAAL,GAAiBJ,UAAU,CAACK,MAAX,CAAkB,UAACC,GAAD,EAAMZ,SAAN,EAAoB;AACrDY,QAAAA,GAAG,CAACZ,SAAD,CAAH,GAAiBD,UAAU,CAACC,SAAD,EAAYK,OAAZ,CAA3B;AACA,eAAOO,GAAP;AACD,OAHgB,EAGd,EAHc,CAAjB;AAID;AACF;;;;kCAEaC,U,EAAY;AACxB,WAAKR,OAAL,GAAeQ,UAAf;AACA,WAAKN,cAAL,GAAsB,IAAtB;AACD;;;sCAEiBO,O,EAAwC;AAAA;;AAAA,UAA/BC,iBAA+B,uEAAXC,SAAW;AACxD,WAAKF,OAAL,GAAeA,OAAf;AACA,WAAKG,aAAL,GAAqB,KAAKX,UAAL,CAAgBY,GAAhB,CAAoB,UAAClB,SAAD;AAAA,eACvCQ,0BAAaW,oBAAb,CAAkCL,OAAO,GAAGd,SAA5C,EAAuD,KAAI,CAACK,OAA5D,CADuC;AAAA,OAApB,CAArB;;AAGA,UAAI,KAAKY,aAAL,CAAmBG,MAAnB,KAA8B,CAA9B,IAAmCL,iBAAvC,EAA0D;AACxD,aAAKE,aAAL,CAAmBI,IAAnB,CACEb,0BAAaW,oBAAb,CACEL,OAAO,GAAGC,iBADZ,EAEE,KAAKV,OAFP,CADF;AAMD;AACF;;;2CAEsB;AACrB,WAAKY,aAAL,IACE,KAAKA,aAAL,CAAmBK,OAAnB,CAA2B,UAACC,EAAD;AAAA,eACzBf,0BAAagB,sBAAb,CAAoCD,EAApC,CADyB;AAAA,OAA3B,CADF;AAIA,WAAKN,aAAL,GAAqBD,SAArB;AACD","sourcesContent":["import NativeModule from './NativeReanimated';\n\nconst jsListener = (eventName, handler) => (evt) => {\n  handler({ ...evt.nativeEvent, eventName });\n};\n\nexport default class WorkletEventHandler {\n  constructor(worklet, eventNames = []) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n\n    if (!NativeModule.native) {\n      this.listeners = eventNames.reduce((acc, eventName) => {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n\n  updateWorklet(newWorklet) {\n    this.worklet = newWorklet;\n    this.reattachNeeded = true;\n  }\n\n  registerForEvents(viewTag, fallbackEventName = undefined) {\n    this.viewTag = viewTag;\n    this.registrations = this.eventNames.map((eventName) =>\n      NativeModule.registerEventHandler(viewTag + eventName, this.worklet)\n    );\n    if (this.registrations.length === 0 && fallbackEventName) {\n      this.registrations.push(\n        NativeModule.registerEventHandler(\n          viewTag + fallbackEventName,\n          this.worklet\n        )\n      );\n    }\n  }\n\n  unregisterFromEvents() {\n    this.registrations &&\n      this.registrations.forEach((id) =>\n        NativeModule.unregisterEventHandler(id)\n      );\n    this.registrations = undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}