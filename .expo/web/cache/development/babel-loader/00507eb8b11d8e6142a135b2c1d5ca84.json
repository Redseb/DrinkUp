{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedCall = createAnimatedCall;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _ReanimatedEventEmitter = _interopRequireDefault(require(\"../ReanimatedEventEmitter\"));\n\nvar _val = require(\"../val\");\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  var node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\n\nvar AnimatedCall = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedCall, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedCall);\n\n  function AnimatedCall(args, jsFunction) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedCall);\n    (0, _invariant.default)(args.every(function (el) {\n      return el instanceof _AnimatedNode2.default;\n    }), \"Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _super.call(this, {\n      type: 'call',\n      input: args\n    }, args);\n    _this._callback = jsFunction;\n    _this._args = args;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedCall, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCall, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedCall.prototype), \"__attach\", this).call(this);\n      NODE_MAPPING.set(this.__nodeID, this);\n\n      if (NODE_MAPPING.size === 1) {\n        _ReanimatedEventEmitter.default.addListener('onReanimatedCall', listener);\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      NODE_MAPPING.delete(this.__nodeID);\n\n      if (NODE_MAPPING.size === 0) {\n        _ReanimatedEventEmitter.default.removeAllListeners('onReanimatedCall');\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedCall.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this._callback(this._args.map(_val.val));\n\n      return 0;\n    }\n  }]);\n  return AnimatedCall;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedCall.js"],"names":["NODE_MAPPING","Map","listener","data","node","get","id","_callback","args","AnimatedCall","jsFunction","every","el","AnimatedNode","type","input","_args","__nodeID","set","size","ReanimatedEventEmitter","addListener","delete","removeAllListeners","map","val","createAnimatedCall","func"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAMC,IAAI,GAAGJ,YAAY,CAACK,GAAb,CAAiBF,IAAI,CAACG,EAAtB,CAAb;AACAF,EAAAA,IAAI,IAAIA,IAAI,CAACG,SAAL,CAAeJ,IAAI,CAACK,IAApB,CAAR;AACD;;IAEKC,Y;;;;;AAIJ,wBAAYD,IAAZ,EAAkBE,UAAlB,EAA8B;AAAA;;AAAA;AAC5B,4BACEF,IAAI,CAACG,KAAL,CAAW,UAAAC,EAAE;AAAA,aAAIA,EAAE,YAAYC,sBAAlB;AAAA,KAAb,CADF;AAIA,8BAAM;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAEP;AAAvB,KAAN,EAAqCA,IAArC;AACA,UAAKD,SAAL,GAAiBG,UAAjB;AACA,UAAKM,KAAL,GAAaR,IAAb;AAP4B;AAQ7B;;;;+BAEU;AACT,oCAA4B,KAAKS,QAAjC;AACD;;;+BAEU;AACT;AACAjB,MAAAA,YAAY,CAACkB,GAAb,CAAiB,KAAKD,QAAtB,EAAgC,IAAhC;;AACA,UAAIjB,YAAY,CAACmB,IAAb,KAAsB,CAA1B,EAA6B;AAC3BC,wCAAuBC,WAAvB,CAAmC,kBAAnC,EAAuDnB,QAAvD;AACD;AACF;;;+BAEU;AACTF,MAAAA,YAAY,CAACsB,MAAb,CAAoB,KAAKL,QAAzB;;AACA,UAAIjB,YAAY,CAACmB,IAAb,KAAsB,CAA1B,EAA6B;AAC3BC,wCAAuBG,kBAAvB,CAA0C,kBAA1C;AACD;;AACD;AACD;;;mCAEc;AACb,WAAKhB,SAAL,CAAe,KAAKS,KAAL,CAAWQ,GAAX,CAAeC,QAAf,CAAf;;AACA,aAAO,CAAP;AACD;;;EArCwBZ,sB;;AAwCpB,SAASa,kBAAT,CAA4BlB,IAA5B,EAAkCmB,IAAlC,EAAwC;AAC7C,SAAO,IAAIlB,YAAJ,CAAiBD,IAAjB,EAAuBmB,IAAvB,CAAP;AACD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport ReanimatedEventEmitter from '../ReanimatedEventEmitter';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nconst NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  const node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\n\nclass AnimatedCall extends AnimatedNode {\n  _callback;\n  _args;\n\n  constructor(args, jsFunction) {\n    invariant(\n      args.every(el => el instanceof AnimatedNode),\n      `Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'call', input: args }, args);\n    this._callback = jsFunction;\n    this._args = args;\n  }\n\n  toString() {\n    return `AnimatedCall, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    super.__attach();\n    NODE_MAPPING.set(this.__nodeID, this);\n    if (NODE_MAPPING.size === 1) {\n      ReanimatedEventEmitter.addListener('onReanimatedCall', listener);\n    }\n  }\n\n  __detach() {\n    NODE_MAPPING.delete(this.__nodeID);\n    if (NODE_MAPPING.size === 0) {\n      ReanimatedEventEmitter.removeAllListeners('onReanimatedCall');\n    }\n    super.__detach();\n  }\n\n  __onEvaluate() {\n    this._callback(this._args.map(val));\n    return 0;\n  }\n}\n\nexport function createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}\n"]},"metadata":{},"sourceType":"script"}