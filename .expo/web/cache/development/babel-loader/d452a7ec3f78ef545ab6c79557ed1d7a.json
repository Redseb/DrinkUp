{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTag = getTag;\nexports.scrollTo = exports.measure = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nfunction getTag(view) {\n  return (0, _reactNative.findNodeHandle)(view);\n}\n\nvar measure = function () {\n  var _f = function _f(animatedRef) {\n    if (!_WORKLET) {\n      throw new Error('(measure) method cannot be used on RN side!');\n    }\n\n    var viewTag = animatedRef();\n\n    var result = _measure(viewTag);\n\n    if (result.x === -1234567) {\n      throw new Error(\"The view with tag \" + viewTag + \" could not be measured\");\n    }\n\n    return result;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function measure(animatedRef){if(!_WORKLET){throw new Error('(measure) method cannot be used on RN side!');}var viewTag=animatedRef();var result=_measure(viewTag);if(result.x===-1234567){throw new Error(\\\"The view with tag \\\"+viewTag+\\\" could not be measured\\\");}return result;}\";\n  _f.__workletHash = 14288603284845;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.measure = measure;\n\nvar scrollTo = function () {\n  var _f = function _f(animatedRef, x, y, animated) {\n    if (!_WORKLET) {\n      return;\n    }\n\n    var viewTag = animatedRef();\n\n    _scrollTo(viewTag, x, y, animated);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function scrollTo(animatedRef,x,y,animated){if(!_WORKLET){return;}var viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}\";\n  _f.__workletHash = 7559237824030;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.scrollTo = scrollTo;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/reanimated2/NativeMethods.js"],"names":["getTag","view","measure","animatedRef","_WORKLET","Error","viewTag","result","_measure","x","scrollTo","y","animated","_scrollTo"],"mappings":";;;;;;AACA;;AAEO,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAO,iCAAeA,IAAf,CAAP;AACD;;IAWeC,O;uBAAQC,W,EAAa;AAEnC,QAAI,CAACC,QAAL,EAAe;AACb,YAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AACD,QAAMC,OAAO,GAAGH,WAAW,EAA3B;;AACA,QAAMI,MAAM,GAAGC,QAAQ,CAACF,OAAD,CAAvB;;AACA,QAAIC,MAAM,CAACE,CAAP,KAAa,CAAC,OAAlB,EAA2B;AACzB,YAAM,IAAIJ,KAAJ,wBAA+BC,OAA/B,4BAAN;AACD;;AACD,WAAOC,MAAP;AACD,G;;;;;;;;;;;;;IAEeG,Q;uBAASP,W,EAAaM,C,EAAGE,C,EAAGC,Q,EAAU;AAEpD,QAAI,CAACR,QAAL,EAAe;AACb;AACD;;AACD,QAAME,OAAO,GAAGH,WAAW,EAA3B;;AACAU,IAAAA,SAAS,CAACP,OAAD,EAAUG,CAAV,EAAaE,CAAb,EAAgBC,QAAhB,CAAT;AACD,G","sourcesContent":["/* global _WORKLET _measure _scrollTo */\nimport { findNodeHandle } from 'react-native';\n\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\n\n/**\n * fields that can be accessed:\n *  x\n *  y\n *  width\n *  height\n *  pageX\n *  pageY\n */\nexport function measure(animatedRef) {\n  'worklet';\n  if (!_WORKLET) {\n    throw new Error('(measure) method cannot be used on RN side!');\n  }\n  const viewTag = animatedRef();\n  const result = _measure(viewTag);\n  if (result.x === -1234567) {\n    throw new Error(`The view with tag ${viewTag} could not be measured`);\n  }\n  return result;\n}\n\nexport function scrollTo(animatedRef, x, y, animated) {\n  'worklet';\n  if (!_WORKLET) {\n    return;\n  }\n  const viewTag = animatedRef();\n  _scrollTo(viewTag, x, y, animated);\n}\n"]},"metadata":{},"sourceType":"script"}