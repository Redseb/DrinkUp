{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar Animation = function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      _NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    _NativeAnimatedHelper.default.API.enableQueue();\n\n    animatedValue.__makeNative();\n\n    _NativeAnimatedHelper.default.API.disableQueue();\n\n    this.__nativeId = _NativeAnimatedHelper.default.generateNewAnimationId();\n\n    _NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n  };\n\n  return Animation;\n}();\n\nvar _default = Animation;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["Animation","_proto","prototype","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","NativeAnimatedHelper","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","enableQueue","__makeNative","disableQueue","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind"],"mappings":"AASA;;;;;;;;;AAEA;;AAKA,IAAIA,SAAS,GAEb,YAAY;AACV,WAASA,SAAT,GAAqB,CAAE;;AAEvB,MAAIC,MAAM,GAAGD,SAAS,CAACE,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,KAAP,GAAe,SAASA,KAAT,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8DC,aAA9D,EAA6E,CAAE,CAA9F;;AAEAP,EAAAA,MAAM,CAACQ,IAAP,GAAc,SAASA,IAAT,GAAgB;AAC5B,QAAI,KAAKC,UAAT,EAAqB;AACnBC,oCAAqBC,GAArB,CAAyBC,aAAzB,CAAuC,KAAKH,UAA5C;AACD;AACF,GAJD;;AAMAT,EAAAA,MAAM,CAACa,0BAAP,GAAoC,SAASA,0BAAT,GAAsC;AAGxE,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,GAJD;;AAOAd,EAAAA,MAAM,CAACe,gBAAP,GAA0B,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AAC1D,QAAIX,KAAK,GAAG,KAAKY,OAAjB;AACA,SAAKA,OAAL,GAAe,IAAf;AACAZ,IAAAA,KAAK,IAAIA,KAAK,CAACW,MAAD,CAAd;AACD,GAJD;;AAMAhB,EAAAA,MAAM,CAACkB,sBAAP,GAAgC,SAASA,sBAAT,CAAgCX,aAAhC,EAA+C;AAC7EG,kCAAqBC,GAArB,CAAyBQ,WAAzB;;AAEAZ,IAAAA,aAAa,CAACa,YAAd;;AAEAV,kCAAqBC,GAArB,CAAyBU,YAAzB;;AACA,SAAKZ,UAAL,GAAkBC,8BAAqBY,sBAArB,EAAlB;;AACAZ,kCAAqBC,GAArB,CAAyBY,kBAAzB,CAA4C,KAAKd,UAAjD,EAA6DF,aAAa,CAACiB,cAAd,EAA7D,EAA6F,KAAKX,0BAAL,EAA7F,EAAgI,KAAKE,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAhI;AACD,GARD;;AAUA,SAAO1B,SAAP;AACD,CArCD,EAFA;;eAyCeA,S","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    NativeAnimatedHelper.API.enableQueue();\n\n    animatedValue.__makeNative();\n\n    NativeAnimatedHelper.API.disableQueue();\n    this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n    NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"script"}