{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _PlayerBadge = _interopRequireDefault(require(\"../components/PlayerBadge\"));\n\nvar _Button = _interopRequireDefault(require(\"../components/Button\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\React Native\\\\drinkUp\\\\src\\\\screens\\\\HomeScreen.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var players = _ref.players,\n      setPlayers = _ref.setPlayers,\n      setInGame = _ref.setInGame;\n  var addPlayerButtonScale = (0, _reactNativeReanimated.useSharedValue)(1);\n  var startButtonScale = (0, _reactNativeReanimated.useSharedValue)(1);\n  var screenSlide = (0, _reactNativeReanimated.useSharedValue)(height);\n  (0, _react.useEffect)(function () {\n    addPlayerButtonScale.value = 1;\n    startButtonScale.value = 1;\n    screenSlide.value = 1;\n  }, [players]);\n  var addPlayerButtonAnimation = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          scale: (0, _reactNativeReanimated.sequence)((0, _reactNativeReanimated.withTiming)(addPlayerButtonScale.value, {\n            duration: 100,\n            easing: _reactNativeReanimated.Easing.bezier(0.5, 0.01, 0, 1)\n          }), (0, _reactNativeReanimated.withTiming)(1, {\n            duration: 100,\n            easing: _reactNativeReanimated.Easing.bezier(0.5, 0.01, 0, 1)\n          }))\n        }]\n      };\n    };\n\n    _f._closure = {\n      sequence: _reactNativeReanimated.sequence,\n      withTiming: _reactNativeReanimated.withTiming,\n      addPlayerButtonScale,\n      Easing: {\n        bezier: _reactNativeReanimated.Easing.bezier\n      }\n    };\n    _f.asString = \"function _f(){const{sequence,withTiming,addPlayerButtonScale,Easing}=jsThis._closure;{return{transform:[{scale:sequence(withTiming(addPlayerButtonScale.value,{duration:100,easing:Easing.bezier(0.5,0.01,0,1)}),withTiming(1,{duration:100,easing:Easing.bezier(0.5,0.01,0,1)}))}]};}}\";\n    _f.__workletHash = 12106118848436;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var startButtonAnimation = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          scale: (0, _reactNativeReanimated.sequence)((0, _reactNativeReanimated.withTiming)(startButtonScale.value, {\n            duration: 100,\n            easing: _reactNativeReanimated.Easing.bezier(0.5, 0.01, 0, 1)\n          }), (0, _reactNativeReanimated.withTiming)(1, {\n            duration: 100,\n            easing: _reactNativeReanimated.Easing.bezier(0.5, 0.01, 0, 1)\n          }))\n        }]\n      };\n    };\n\n    _f._closure = {\n      sequence: _reactNativeReanimated.sequence,\n      withTiming: _reactNativeReanimated.withTiming,\n      startButtonScale,\n      Easing: {\n        bezier: _reactNativeReanimated.Easing.bezier\n      }\n    };\n    _f.asString = \"function _f(){const{sequence,withTiming,startButtonScale,Easing}=jsThis._closure;{return{transform:[{scale:sequence(withTiming(startButtonScale.value,{duration:100,easing:Easing.bezier(0.5,0.01,0,1)}),withTiming(1,{duration:100,easing:Easing.bezier(0.5,0.01,0,1)}))}]};}}\";\n    _f.__workletHash = 1003194801332;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var scaledScreenAnimation = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          translateY: (0, _reactNativeReanimated.withSpring)(screenSlide.value, {\n            damping: 20\n          })\n        }]\n      };\n    };\n\n    _f._closure = {\n      withSpring: _reactNativeReanimated.withSpring,\n      screenSlide\n    };\n    _f.asString = \"function _f(){const{withSpring,screenSlide}=jsThis._closure;{return{transform:[{translateY:withSpring(screenSlide.value,{damping:20})}]};}}\";\n    _f.__workletHash = 11730276450465;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var playerBadges = players.map(function (player) {\n    return _react.default.createElement(_PlayerBadge.default, {\n      playerName: player.name,\n      players: players,\n      setPlayers: setPlayers,\n      id: player.id,\n      key: player.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    });\n  });\n  var playerListRef = (0, _react.useRef)();\n  return _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [scaledScreenAnimation, styles.container, _reactNative.StyleSheet.absoluteFillObject],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Drink Up!\")), _react.default.createElement(_reactNative.View, {\n    style: styles.playersContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    ref: playerListRef,\n    overScrollMode: 'never',\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, playerBadges)), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Button.default, {\n    text: 'Add a Player',\n    onPress: function onPress() {\n      setPlayers([].concat((0, _toConsumableArray2.default)(players), [{\n        name: '',\n        id: players.length > 0 ? players[players.length - 1].id + 1 : 1\n      }]));\n      addPlayerButtonScale.value = 0.9;\n      setTimeout(function () {\n        playerListRef.current.scrollToEnd({\n          animated: true\n        });\n      }, 100);\n    },\n    style: addPlayerButtonAnimation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_Button.default, {\n    text: players.length == 0 ? 'Play Without Players' : 'Play!',\n    onPress: function onPress() {\n      startButtonScale.value = 0.9;\n      setTimeout(function () {\n        screenSlide.value = height;\n        setTimeout(function () {\n          return setInGame(true);\n        }, 300);\n      }, 200);\n    },\n    style: startButtonAnimation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  titleContainer: {\n    backgroundColor: '#303030',\n    padding: 10,\n    width: width,\n    marginTop: height / 20,\n    elevation: 10\n  },\n  title: {\n    color: '#FDD451',\n    fontSize: height / 12,\n    textAlign: 'center',\n    fontFamily: 'FjallaOne'\n  },\n  playersContainer: {\n    height: height / 2.5\n  },\n  buttonsContainer: {\n    height: height / 3,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  }\n});\n\nvar _default = HomeScreen;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/screens/HomeScreen.js"],"names":["Dimensions","get","width","height","HomeScreen","players","setPlayers","setInGame","addPlayerButtonScale","startButtonScale","screenSlide","value","addPlayerButtonAnimation","transform","scale","duration","easing","Easing","bezier","sequence","withTiming","startButtonAnimation","scaledScreenAnimation","translateY","damping","withSpring","playerBadges","map","player","name","id","playerListRef","styles","container","StyleSheet","absoluteFillObject","titleContainer","title","playersContainer","buttonsContainer","length","setTimeout","current","scrollToEnd","animated","create","display","flexDirection","backgroundColor","padding","marginTop","elevation","color","fontSize","textAlign","fontFamily","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport Animated, {\r\n  useSharedValue,\r\n  useAnimatedStyle,\r\n  Easing,\r\n  withTiming,\r\n  withSpring,\r\n  sequence,\r\n} from 'react-native-reanimated';\r\n\r\nimport PlayerBadge from '../components/PlayerBadge';\r\nimport Button from '../components/Button';\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nconst HomeScreen = ({players, setPlayers, setInGame}) => {\r\n  const addPlayerButtonScale = useSharedValue(1);\r\n  const startButtonScale = useSharedValue(1);\r\n  const screenSlide = useSharedValue(height);\r\n  //Resets addPlayerButtonScale whenever players changes (removing players).\r\n  //Without this the button animates when removing players too\r\n  useEffect(() => {\r\n    addPlayerButtonScale.value = 1;\r\n    startButtonScale.value = 1;\r\n    screenSlide.value = 1;\r\n  }, [players]);\r\n  const addPlayerButtonAnimation = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [\r\n        {\r\n          scale: sequence(\r\n            withTiming(addPlayerButtonScale.value, {\r\n              duration: 100,\r\n              easing: Easing.bezier(0.5, 0.01, 0, 1),\r\n            }),\r\n            withTiming(1, {\r\n              duration: 100,\r\n              easing: Easing.bezier(0.5, 0.01, 0, 1),\r\n            }),\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n  });\r\n  const startButtonAnimation = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [\r\n        {\r\n          scale: sequence(\r\n            withTiming(startButtonScale.value, {\r\n              duration: 100,\r\n              easing: Easing.bezier(0.5, 0.01, 0, 1),\r\n            }),\r\n            withTiming(1, {\r\n              duration: 100,\r\n              easing: Easing.bezier(0.5, 0.01, 0, 1),\r\n            }),\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n  });\r\n  const scaledScreenAnimation = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [\r\n        {\r\n          translateY: withSpring(screenSlide.value, {\r\n            damping: 20,\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n  });\r\n\r\n  const playerBadges = players.map((player) => (\r\n    <PlayerBadge\r\n      playerName={player.name}\r\n      players={players}\r\n      setPlayers={setPlayers}\r\n      id={player.id}\r\n      key={player.id}\r\n    />\r\n  ));\r\n\r\n  const playerListRef = useRef();\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        scaledScreenAnimation,\r\n        styles.container,\r\n        StyleSheet.absoluteFillObject,\r\n      ]}>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>Drink Up!</Text>\r\n      </View>\r\n      <View style={styles.playersContainer}>\r\n        <ScrollView\r\n          ref={playerListRef}\r\n          overScrollMode={'never'}\r\n          showsVerticalScrollIndicator={false}>\r\n          {playerBadges}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.buttonsContainer}>\r\n        <Button\r\n          text={'Add a Player'}\r\n          onPress={() => {\r\n            setPlayers([\r\n              ...players,\r\n              {\r\n                name: '',\r\n                id: players.length > 0 ? players[players.length - 1].id + 1 : 1,\r\n              },\r\n            ]);\r\n            addPlayerButtonScale.value = 0.9;\r\n            setTimeout(() => {\r\n              playerListRef.current.scrollToEnd({animated: true});\r\n            }, 100);\r\n          }}\r\n          style={addPlayerButtonAnimation}\r\n        />\r\n        <Button\r\n          text={players.length == 0 ? 'Play Without Players' : 'Play!'}\r\n          onPress={() => {\r\n            startButtonScale.value = 0.9;\r\n            setTimeout(() => {\r\n              screenSlide.value = height;\r\n              setTimeout(() => setInGame(true), 300);\r\n            }, 200);\r\n          }}\r\n          style={startButtonAnimation}\r\n        />\r\n      </View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  titleContainer: {\r\n    backgroundColor: '#303030',\r\n    padding: 10,\r\n    width: width,\r\n    marginTop: height / 20,\r\n    elevation: 10,\r\n  },\r\n  title: {\r\n    color: '#FDD451',\r\n    fontSize: height / 12,\r\n    textAlign: 'center',\r\n    fontFamily: 'FjallaOne',\r\n  },\r\n  playersContainer: {\r\n    height: height / 2.5,\r\n    // marginBottom: height / 50,\r\n  },\r\n  buttonsContainer: {\r\n    height: height / 3,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"script"}