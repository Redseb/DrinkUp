{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOrReusePropsNode = createOrReusePropsNode;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedEvent = _interopRequireDefault(require(\"./AnimatedEvent\"));\n\nvar _AnimatedStyle = require(\"./AnimatedStyle\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _areEqual = _interopRequireDefault(require(\"fbjs/lib/areEqual\"));\n\nvar _val = require(\"../val\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction sanitizeProps(inputProps) {\n  var props;\n\n  for (var key in inputProps) {\n    var value = inputProps[key];\n\n    if (value instanceof _AnimatedNode2.default && !(value instanceof _AnimatedEvent.default)) {\n      if (props === undefined) {\n        props = {};\n      }\n\n      props[key] = value.__nodeID;\n    }\n  }\n\n  return props;\n}\n\nfunction createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    var style = (0, _AnimatedStyle.createOrReuseStyleNode)(props.style, oldNode && oldNode._props.style);\n\n    if (style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: style\n      });\n    }\n  }\n\n  var config = sanitizeProps(props);\n\n  if (config === undefined) {\n    return undefined;\n  }\n\n  if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {\n    return oldNode;\n  }\n\n  return new AnimatedProps(props, config, callback);\n}\n\nvar AnimatedProps = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedProps, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedProps);\n\n  function AnimatedProps(props, config, callback) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedProps);\n    _this = _super.call(this, {\n      type: 'props',\n      props: config\n    }, Object.values(props).filter(function (n) {\n      return !(n instanceof _AnimatedEvent.default);\n    }));\n    _this._config = config;\n    _this._props = props;\n    _this._callback = callback;\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedProps, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedProps, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var props = {};\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          props[key] = value.__getValue();\n        }\n      }\n\n      return props;\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nativeViewTag = (0, _reactNative.findNodeHandle)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      this._disconnectAnimatedView(nativeViewTag);\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n\n      if (!this._animatedView) {\n        return;\n      }\n\n      (0, _val.val)(this);\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n\n      this._animatedView = animatedView;\n      var nativeViewTag = (0, _reactNative.findNodeHandle)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      this._connectAnimatedView(nativeViewTag);\n    }\n  }]);\n  return AnimatedProps;\n}(_AnimatedNode2.default);","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedProps.js"],"names":["sanitizeProps","inputProps","props","key","value","AnimatedNode","AnimatedEvent","undefined","__nodeID","createOrReusePropsNode","callback","oldNode","style","_props","config","_config","AnimatedProps","type","Object","values","filter","n","_callback","__attach","__getValue","nativeViewTag","_animatedView","_disconnectAnimatedView","animatedView","_connectAnimatedView"],"mappings":"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","sourcesContent":["import { findNodeHandle } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedEvent from './AnimatedEvent';\nimport { createOrReuseStyleNode } from './AnimatedStyle';\n\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from '../val';\n\nfunction sanitizeProps(inputProps) {\n  let props;\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      if (props === undefined) {\n        props = {};\n      }\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\n\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    const style = createOrReuseStyleNode(props.style, oldNode && oldNode._props.style);\n    if (style) {\n      props = {\n        ...props,\n        style,\n      };\n    }\n  }\n  const config = sanitizeProps(props);\n  if (config === undefined) {\n    return undefined;\n  }\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, config, callback) {\n    super(\n      { type: 'props', props: config },\n      Object.values(props).filter(n => !(n instanceof AnimatedEvent))\n    );\n    this._config = config;\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  toString() {\n    return `AnimatedProps, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      }\n    }\n    return props;\n  }\n\n  __detach() {\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._disconnectAnimatedView(nativeViewTag);\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n\n    if (!this._animatedView) {\n      return;\n    }\n\n    val(this);\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._connectAnimatedView(nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}