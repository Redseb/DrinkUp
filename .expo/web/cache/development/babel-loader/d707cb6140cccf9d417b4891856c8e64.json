{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedSet = createAnimatedSet;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _val = require(\"../val\");\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedSet = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedSet, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedSet);\n\n  function AnimatedSet(what, value) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedSet);\n    (0, _invariant.default)(what instanceof _AnimatedNode2.default, \"Reanimated: Animated.set first argument should be of type AnimatedNode but got \" + what);\n    (0, _invariant.default)(value instanceof _AnimatedNode2.default, \"Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got \" + value);\n    _this = _super.call(this, {\n      type: 'set',\n      what: what,\n      value: value\n    }, [value]);\n    (0, _invariant.default)(!what._constant, 'Value to be set cannot be constant');\n    _this._what = what;\n    _this._value = value;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedSet, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedSet, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var newValue = (0, _val.val)(this._value);\n\n      this._what.setValue(newValue);\n\n      return newValue;\n    }\n  }]);\n  return AnimatedSet;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedSet(what, value) {\n  return new AnimatedSet(what, (0, _AnimatedBlock.adapt)(value));\n}","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedSet.js"],"names":["AnimatedSet","what","value","AnimatedNode","type","_constant","_what","_value","__nodeID","newValue","setValue","createAnimatedSet"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEMA,W;;;;;AAIJ,uBAAYC,IAAZ,EAAkBC,KAAlB,EAAyB;AAAA;;AAAA;AACvB,4BACED,IAAI,YAAYE,sBADlB,sFAEoFF,IAFpF;AAIA,4BACEC,KAAK,YAAYC,sBADnB,yGAEuGD,KAFvG;AAIA,8BAAM;AAAEE,MAAAA,IAAI,EAAE,KAAR;AAAeH,MAAAA,IAAI,EAAJA,IAAf;AAAqBC,MAAAA,KAAK,EAALA;AAArB,KAAN,EAAoC,CAACA,KAAD,CAApC;AACA,4BAAU,CAACD,IAAI,CAACI,SAAhB,EAA2B,oCAA3B;AACA,UAAKC,KAAL,GAAaL,IAAb;AACA,UAAKM,MAAL,GAAcL,KAAd;AAZuB;AAaxB;;;;+BAEU;AACT,mCAA2B,KAAKM,QAAhC;AACD;;;mCAEc;AACb,UAAMC,QAAQ,GAAG,cAAI,KAAKF,MAAT,CAAjB;;AACA,WAAKD,KAAL,CAAWI,QAAX,CAAoBD,QAApB;;AACA,aAAOA,QAAP;AACD;;;EA3BuBN,sB;;AA8BnB,SAASQ,iBAAT,CAA2BV,IAA3B,EAAiCC,KAAjC,EAAwC;AAC7C,SAAO,IAAIF,WAAJ,CAAgBC,IAAhB,EAAsB,0BAAMC,KAAN,CAAtB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport invariant from 'fbjs/lib/invariant';\nimport { val } from '../val';\nimport { adapt } from '../core/AnimatedBlock';\n\nclass AnimatedSet extends AnimatedNode {\n  _what;\n  _value;\n\n  constructor(what, value) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: Animated.set first argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      value instanceof AnimatedNode,\n      `Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got ${value}`\n    );\n    super({ type: 'set', what, value }, [value]);\n    invariant(!what._constant, 'Value to be set cannot be constant');\n    this._what = what;\n    this._value = value;\n  }\n\n  toString() {\n    return `AnimatedSet, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const newValue = val(this._value);\n    this._what.setValue(newValue);\n    return newValue;\n  }\n}\n\nexport function createAnimatedSet(what, value) {\n  return new AnimatedSet(what, adapt(value));\n}\n"]},"metadata":{},"sourceType":"script"}