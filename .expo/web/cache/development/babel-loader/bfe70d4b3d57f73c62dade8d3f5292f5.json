{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedParam = createAnimatedParam;\nexports.AnimatedParam = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _AnimatedNode2 = _interopRequireWildcard(require(\"./AnimatedNode\"));\n\nvar _AnimatedClock = _interopRequireDefault(require(\"./AnimatedClock\"));\n\nvar _val = require(\"../val\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedParam = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedParam, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedParam);\n\n  function AnimatedParam() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedParam);\n    _this = _super.call(this, {\n      type: 'param'\n    }, []);\n    _this.argsStack = [];\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedParam, [{\n    key: \"beginContext\",\n    value: function beginContext(ref, prevCallID) {\n      this._prevCallID = prevCallID;\n      this.argsStack.push(ref);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.argsStack.pop();\n    }\n  }, {\n    key: \"_getTopNode\",\n    value: function _getTopNode() {\n      if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n      var top = this.argsStack[this.argsStack.length - 1];\n      return top;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var top = this._getTopNode();\n\n      if (top.setValue) {\n        var callID = (0, _AnimatedNode2.getCallID)();\n        (0, _AnimatedNode2.setCallID)(this._prevCallID);\n        top.setValue(value);\n        (0, _AnimatedNode2.setCallID)(callID);\n      } else {\n        throw new Error(\"param: setValue(\" + value + \") failed because the top element has no known method for updating it's current value.\");\n      }\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var callID = (0, _AnimatedNode2.getCallID)();\n      (0, _AnimatedNode2.setCallID)(this._prevCallID);\n\n      var top = this._getTopNode();\n\n      var value = (0, _val.val)(top);\n      (0, _AnimatedNode2.setCallID)(callID);\n      return value;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.stop();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var node = this._getTopNode();\n\n      if (node instanceof AnimatedParam) {\n        return node.isRunning();\n      }\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default, \"param: top node should be of type AnimatedClock but got \" + node);\n      return node.isStarted();\n    }\n  }]);\n  return AnimatedParam;\n}(_AnimatedNode2.default);\n\nexports.AnimatedParam = AnimatedParam;\n\nfunction createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/node_modules/react-native-reanimated/src/core/AnimatedParam.js"],"names":["AnimatedParam","type","argsStack","__attach","ref","prevCallID","_prevCallID","push","pop","length","Error","top","value","_getTopNode","setValue","callID","node","AnimatedClock","start","stop","isRunning","isStarted","AnimatedNode","createAnimatedParam"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEaA,a;;;;;AAIX,2BAAc;AAAA;;AAAA;AACZ,8BAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN,EAAyB,EAAzB;AADY,UAHdC,SAGc,GAHF,EAGE;;AAEZ,UAAKC,QAAL;;AAFY;AAGb;;;;iCAEYC,G,EAAKC,U,EAAY;AAC5B,WAAKC,WAAL,GAAmBD,UAAnB;AACA,WAAKH,SAAL,CAAeK,IAAf,CAAoBH,GAApB;AACD;;;iCAEY;AACX,WAAKF,SAAL,CAAeM,GAAf;AACD;;;kCAEa;AACZ,UAAI,KAAKN,SAAL,CAAeO,MAAf,KAA0B,CAA9B,EAAiC,MAAM,IAAIC,KAAJ,uDAAN;AACjC,UAAMC,GAAG,GAAG,KAAKT,SAAL,CAAe,KAAKA,SAAL,CAAeO,MAAf,GAAwB,CAAvC,CAAZ;AACA,aAAOE,GAAP;AACD;;;6BAEQC,K,EAAO;AACd,UAAMD,GAAG,GAAG,KAAKE,WAAL,EAAZ;;AACA,UAAIF,GAAG,CAACG,QAAR,EAAkB;AAChB,YAAMC,MAAM,GAAG,+BAAf;AACA,sCAAU,KAAKT,WAAf;AACAK,QAAAA,GAAG,CAACG,QAAJ,CAAaF,KAAb;AACA,sCAAUG,MAAV;AACD,OALD,MAKO;AACL,cAAM,IAAIL,KAAJ,sBAA6BE,KAA7B,2FAAN;AACD;AACF;;;mCAEc;AACb,UAAMG,MAAM,GAAG,+BAAf;AACA,oCAAU,KAAKT,WAAf;;AACA,UAAMK,GAAG,GAAG,KAAKE,WAAL,EAAZ;;AACA,UAAMD,KAAK,GAAG,cAAID,GAAJ,CAAd;AACA,oCAAUI,MAAV;AACA,aAAOH,KAAP;AACD;;;4BAEO;AACN,UAAMI,IAAI,GAAG,KAAKH,WAAL,EAAb;;AACA,8BACEG,IAAI,YAAYC,sBAAhB,IAAiCD,IAAI,YAAYhB,aADnD,+DAE6DgB,IAF7D;AAIAA,MAAAA,IAAI,CAACE,KAAL;AACD;;;2BAEM;AACL,UAAMF,IAAI,GAAG,KAAKH,WAAL,EAAb;;AACA,8BACEG,IAAI,YAAYC,sBAAhB,IAAiCD,IAAI,YAAYhB,aADnD,+DAE6DgB,IAF7D;AAIAA,MAAAA,IAAI,CAACG,IAAL;AACD;;;gCAEW;AACV,UAAMH,IAAI,GAAG,KAAKH,WAAL,EAAb;;AAEA,UAAIG,IAAI,YAAYhB,aAApB,EAAmC;AACjC,eAAOgB,IAAI,CAACI,SAAL,EAAP;AACD;;AACD,8BACEJ,IAAI,YAAYC,sBADlB,+DAE6DD,IAF7D;AAIA,aAAOA,IAAI,CAACK,SAAL,EAAP;AACD;;;EA1EgCC,sB;;;;AA6E5B,SAASC,mBAAT,GAA+B;AACpC,SAAO,IAAIvB,aAAJ,EAAP;AACD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\n\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n  \n  constructor() {\n    super({ type: 'param' }, []);\n    this.__attach();\n  }\n\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n\n  endContext() {\n    this.argsStack.pop();\n  }\n\n  _getTopNode() {\n    if (this.argsStack.length === 0) throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(`param: setValue(${value}) failed because the top element has no known method for updating it's current value.`)\n    }\n  }\n  \n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n\n  start() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.start();\n  }\n\n  stop() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.stop();\n  }\n\n  isRunning() {\n    const node = this._getTopNode();\n\n    if (node instanceof AnimatedParam) {\n      return node.isRunning()\n    }\n    invariant(\n      node instanceof AnimatedClock,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    return node.isStarted();\n  }\n}\n\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}\n"]},"metadata":{},"sourceType":"script"}