{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\React Native\\\\drinkUp\\\\src\\\\components\\\\Button.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Button = function Button(_ref) {\n  var text = _ref.text,\n      onPress = _ref.onPress,\n      style = _ref.style;\n  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n    style: [styles.container],\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [style, styles.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, text)));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#303030',\n    height: height / 7,\n    borderColor: '#FDD451',\n    borderWidth: 2,\n    marginHorizontal: width / 20,\n    alignContent: 'center',\n    borderRadius: 10,\n    elevation: 5\n  },\n  text: {\n    color: '#FDD451',\n    textAlign: 'center',\n    fontSize: height / 20,\n    fontFamily: 'FjallaOne'\n  }\n});\n\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/components/Button.js"],"names":["Dimensions","get","width","height","Button","text","onPress","style","styles","container","StyleSheet","create","display","flexDirection","justifyContent","backgroundColor","borderColor","borderWidth","marginHorizontal","alignContent","borderRadius","elevation","color","textAlign","fontSize","fontFamily"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;;;;sBAQwBA,wBAAWC,GAAX,CAAe,QAAf,C;IAAjBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AAEd,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA4B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACzC,SACE,6BAAC,qCAAD;AAA0B,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,CAAjC;AAAqD,IAAA,OAAO,EAAEH,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAM,CAACC,SAAf,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,IAA3B,CADF,CADF,CADF;AAOD,CARD;;AAUA,IAAMG,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTZ,IAAAA,MAAM,EAAEA,MAAM,GAAG,CALR;AAMTa,IAAAA,WAAW,EAAE,SANJ;AAOTC,IAAAA,WAAW,EAAE,CAPJ;AAQTC,IAAAA,gBAAgB,EAAEhB,KAAK,GAAG,EARjB;AASTiB,IAAAA,YAAY,EAAE,QATL;AAUTC,IAAAA,YAAY,EAAE,EAVL;AAWTC,IAAAA,SAAS,EAAE;AAXF,GADoB;AAc/BhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,QAAQ,EAAErB,MAAM,GAAG,EAHf;AAIJsB,IAAAA,UAAU,EAAE;AAJR;AAdyB,CAAlB,CAAf;;eAsBerB,M","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport Animated, {\r\n  useSharedValue,\r\n  useAnimatedStyle,\r\n  Easing,\r\n  withTiming,\r\n  repeat,\r\n} from 'react-native-reanimated';\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nconst Button = ({text, onPress, style}) => {\r\n  return (\r\n    <TouchableWithoutFeedback style={[styles.container]} onPress={onPress}>\r\n      <Animated.View style={[style, styles.container]}>\r\n        <Text style={styles.text}>{text}</Text>\r\n      </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#303030',\r\n    height: height / 7,\r\n    borderColor: '#FDD451',\r\n    borderWidth: 2,\r\n    marginHorizontal: width / 20,\r\n    alignContent: 'center',\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  text: {\r\n    color: '#FDD451',\r\n    textAlign: 'center',\r\n    fontSize: height / 20,\r\n    fontFamily: 'FjallaOne',\r\n  },\r\n});\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"script"}