{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _v = require(\"react-native-redash/lib/module/v1\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _animationHelpers = require(\"../util/animation-helpers\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\React Native\\\\drinkUp\\\\src\\\\components\\\\Swipeable.js\";\n\nvar config = {\n  speed: 200,\n  bounciness: 0,\n  damping: 10000,\n  mass: 1,\n  stiffness: 300,\n  overshootClamping: false,\n  restSpeedThreshold: 100000,\n  restDisplacementThreshold: 1\n};\n\nvar _Dimensions$get = _reactNative.Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = height / 1.3;\nvar CARD_WIDTH = width / 1.15;\n\nvar Swipeable = function Swipeable(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      snapPointsX = _ref.snapPointsX,\n      snapPointsY = _ref.snapPointsY,\n      onSnap = _ref.onSnap;\n  var translationX = new _reactNativeReanimated.Value(0);\n  var translationY = new _reactNativeReanimated.Value(0);\n  var velocityX = new _reactNativeReanimated.Value(0);\n  var velocityY = new _reactNativeReanimated.Value(0);\n  var state = new _reactNativeReanimated.Value(_reactNativeGestureHandler.State.UNDETERMINED);\n  var gestureHandler = (0, _v.onGestureEvent)({\n    velocityX: velocityX,\n    translationX: translationX,\n    translationY: translationY,\n    state: state\n  });\n  var translateX = (0, _animationHelpers.withSpring)({\n    value: translationX,\n    velocity: velocityX,\n    offset: offsetX,\n    state: state,\n    snapPoints: snapPointsX,\n    onSnap: onSnap,\n    config: config\n  });\n  var translateY = (0, _animationHelpers.withSpring)({\n    value: translationY,\n    velocity: velocityY,\n    offset: offsetY,\n    state: state,\n    snapPoints: snapPointsY,\n    onSnap: onSnap,\n    config: config\n  });\n  (0, _reactNativeReanimated.useCode)(function () {\n    return (0, _reactNativeReanimated.block)([(0, _reactNativeReanimated.set)(x, translateX), (0, _reactNativeReanimated.set)(y, translateY)]);\n  }, [translateX, translateY, x, y]);\n  return React.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, gestureHandler, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), React.createElement(_reactNativeReanimated.default.View, {\n    style: {\n      height: CARD_HEIGHT,\n      width: CARD_WIDTH,\n      marginVertical: (height - CARD_HEIGHT) / 2,\n      marginHorizontal: (width - CARD_WIDTH) / 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = Swipeable;\nexports.default = _default;","map":{"version":3,"sources":["D:/Programming/React Native/drinkUp/src/components/Swipeable.js"],"names":["config","speed","bounciness","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","Swipeable","x","y","offsetX","offsetY","snapPointsX","snapPointsY","onSnap","translationX","Value","translationY","velocityX","velocityY","state","State","UNDETERMINED","gestureHandler","translateX","value","velocity","offset","snapPoints","translateY","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {Dimensions} from 'react-native';\r\nimport {onGestureEvent} from 'react-native-redash/lib/module/v1';\r\nimport Animated, {Value, useCode, block, set} from 'react-native-reanimated';\r\nimport {PanGestureHandler, State} from 'react-native-gesture-handler';\r\n\r\nimport {withSpring} from '../util/animation-helpers';\r\n\r\nconst config = {\r\n  speed: 200,\r\n  bounciness: 0,\r\n  damping: 10000,\r\n  mass: 1,\r\n  stiffness: 300,\r\n  overshootClamping: false,\r\n  restSpeedThreshold: 100000,\r\n  restDisplacementThreshold: 1,\r\n};\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\nconst CARD_HEIGHT = height / 1.3;\r\nconst CARD_WIDTH = width / 1.15;\r\n\r\nconst Swipeable = ({\r\n  x,\r\n  y,\r\n  offsetX,\r\n  offsetY,\r\n  snapPointsX,\r\n  snapPointsY,\r\n  onSnap,\r\n}) => {\r\n  const translationX = new Value(0);\r\n  const translationY = new Value(0);\r\n  const velocityX = new Value(0);\r\n  const velocityY = new Value(0);\r\n  const state = new Value(State.UNDETERMINED);\r\n  const gestureHandler = onGestureEvent({\r\n    velocityX,\r\n    translationX,\r\n    translationY,\r\n    state,\r\n  });\r\n  const translateX = withSpring({\r\n    value: translationX,\r\n    velocity: velocityX,\r\n    offset: offsetX,\r\n    state,\r\n    snapPoints: snapPointsX,\r\n    onSnap,\r\n    config,\r\n  });\r\n  const translateY = withSpring({\r\n    value: translationY,\r\n    velocity: velocityY,\r\n    offset: offsetY,\r\n    state,\r\n    snapPoints: snapPointsY,\r\n    onSnap,\r\n    config,\r\n  });\r\n  useCode(() => block([set(x, translateX), set(y, translateY)]), [\r\n    translateX,\r\n    translateY,\r\n    x,\r\n    y,\r\n  ]);\r\n  return (\r\n    <PanGestureHandler {...gestureHandler}>\r\n      <Animated.View\r\n        style={{\r\n          height: CARD_HEIGHT,\r\n          width: CARD_WIDTH,\r\n          marginVertical: (height - CARD_HEIGHT) / 2,\r\n          marginHorizontal: (width - CARD_WIDTH) / 2,\r\n        }}\r\n      />\r\n    </PanGestureHandler>\r\n  );\r\n};\r\n\r\nexport default Swipeable;\r\n"]},"metadata":{},"sourceType":"script"}